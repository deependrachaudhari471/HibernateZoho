package in.com.prestige.dto;
// Generated May 30, 2018 4:58:22 PM by Hibernate Tools 4.0.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ProjectManager generated by hbm2java
 */
@Entity
@Table(name = "project_manager", catalog = "zohotest2")
public class ProjectManager implements java.io.Serializable {

	private int projectManagerId;
	private Project project;
	private Company company;
	private String contact;
	private String projectManagerName;
	private Set<Feeds> feedses = new HashSet<Feeds>(0);

	public ProjectManager() {
	}

	public ProjectManager(int projectManagerId) {
		this.projectManagerId = projectManagerId;
	}

	public ProjectManager(int projectManagerId, Project project, Company company, String contact,
			String projectManagerName, Set<Feeds> feedses) {
		this.projectManagerId = projectManagerId;
		this.project = project;
		this.company = company;
		this.contact = contact;
		this.projectManagerName = projectManagerName;
		this.feedses = feedses;
	}

	@Id

	@Column(name = "ProjectManagerId", unique = true, nullable = false)
	public int getProjectManagerId() {
		return this.projectManagerId;
	}

	public void setProjectManagerId(int projectManagerId) {
		this.projectManagerId = projectManagerId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ProjectId")
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CompanyId")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@Column(name = "Contact")
	public String getContact() {
		return this.contact;
	}

	public void setContact(String contact) {
		this.contact = contact;
	}

	@Column(name = "projectManagerName")
	public String getProjectManagerName() {
		return this.projectManagerName;
	}

	public void setProjectManagerName(String projectManagerName) {
		this.projectManagerName = projectManagerName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "projectManager")
	public Set<Feeds> getFeedses() {
		return this.feedses;
	}

	public void setFeedses(Set<Feeds> feedses) {
		this.feedses = feedses;
	}

}
